// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id                     String                  @id
  internalId             String?                 @unique @default(uuid())
  lastServerDataUpdate   DateTime                @default(now())
  hasAcceptedSocialTerms Boolean                 @default(false)
  name                   String?                 @unique
  school                 String?
  average                Float?
  absencesHours          Float?
  delays                 Int?
  permissions            Int                     @default(1)
  posts                  Post[]
  likes                  PostLikeInteraction[]
  bio                    String?
  followers              FollowUserInteraction[] @relation(name: "followedRelation")
  following              FollowUserInteraction[] @relation(name: "followerRelation")
}

model Post {
  id        String                @id @default(uuid())
  feed      String                @default("main")
  content   String
  createdAt DateTime              @default(now())
  author    User?                 @relation(fields: [authorId], references: [internalId])
  authorId  String?
  likes     PostLikeInteraction[]
}

model PostLikeInteraction {
  id        String   @id @default(uuid())
  post      Post     @relation(fields: [postId], references: [id])
  postId    String
  user      User     @relation(fields: [userId], references: [internalId])
  userId    String
  type      String   @default("upvote")
  createdAt DateTime @default(now())
}

model FollowUserInteraction {
  id         String   @id @default(uuid())
  follower   User     @relation(name: "followerRelation", fields: [followerId], references: [internalId])
  followerId String
  followed   User     @relation(name: "followedRelation", fields: [followedId], references: [internalId])
  followedId String
  createdAt  DateTime @default(now())
}

model Notifications {
  id         String   @id @default(uuid())
  createDate DateTime @default(now())
  expiryDate DateTime
  title      String
  content    String
  type       String
  viewCount  Int      @default(0)
  link       String?
  linkTitle  String?
}
